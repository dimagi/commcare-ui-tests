// Should send email/slack notification
def notify = false
// Number of times to retry a failed test
def retries = 3
// Pool of devices on AWS to run on
def poolArray = ['asus']
// Job to copy the tested APK from
def cc_android_job = 'commcare-android'

def buildPassing = true

node {
    stage('test') {

        // All of the tags run on AWS. We specify these individually so that we can iterate over each
        // tag and retry them granularly when they fail.
        def tagArray = ['@MenuTests', '@Login', '@FormEntry', '@Fixtures',
                        '@FormSettings', '@Setup', '@CaseSharing', '@Languages',
                        '@CaseListSearch', '@CaseListSort', '@Settings', '@FormFiltering',
                        '@SessionExpiration', '@Dialogs', '@InstallList']

        try {
            echo 'Running tests...'
            checkout scm

            // Run the commcare-odk-tests job for each device pool and each tag, retrying up to three
            // times on failures
            for (pool in poolArray) {
                for (tag in tagArray) {
                    def stageString = "${tag} on ${pool}"
                    def stagePassed = false
                    count = 0
                    while (count < 3 & !stagePassed) {
                        stage ("${stageString} try ${count}") {
                            echo "Testing ${stageString} try number ${count} tag ${tag}"
                            def testRun = build job: 'pipeline-runner', parameters: [
                                [$class: 'StringParameterValue', name: 'pool', value: pool],
                                [$class: 'StringParameterValue', name: 'stageString', value: stageString]
                                [$class: 'StringParameterValue', name: 'tag', value: tag]
                            ]
                            def runResult = testRun.getResult()
                            echo "testRun result ${runResult}"
                            if (runResult == 'SUCCESS') {
                                echo "Step ${stageString} set to SUCCESS"
                                stagePassed = true
                            }
                            count = count + 1
                        }
                    }
                    if (!stagePassed) {
                        echo "Build set to FAILURE after on step ${stageString}"
                        buildPassing = false
                    }
                }
            }
        }
        finally {
            if (buildPassing) {
                currentBuild.result = 'SUCCESS'
            } else {
                currentBuild.result = 'FAILURE'
            }
            echo "Finally buildPassing=${buildPassing} currentBuild.result=${currentBuild.result}"
            if (notify) {
                if (buildPassing) {
                    slackSend color: 'good', message: 'Amazon device farm tests passed, :tight:'
                } else {
                    slackSend color: 'bad', message: 'Amazon device farm tests failed, :nottight:'
                    mail (to: 'mobiledev@dimagi.com',
                        subject: "Amazon device farm tests failed.",
                        body: "Amazon device farm tests failed.");
                }
            }
        }
    }
}